// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model invoice_products {
  id         BigInt   @id @default(autoincrement())
  invoice_id BigInt?
  product_id BigInt   @unique
  user_id    BigInt?
  qty        String
  sale_price String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product products  @relation(fields: [product_id], references: [id])
  invoice invoices? @relation(fields: [invoice_id], references: [id])
  user    users?    @relation(fields: [user_id], references: [id])
}

model products {
  id          BigInt   @id @default(autoincrement())
  user_id     BigInt?
  category_id BigInt?
  name        String
  price       String
  unit        String
  img_url     String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  category         categories?       @relation(fields: [category_id], references: [id])
  user             users?            @relation(fields: [user_id], references: [id])
  invoice_products invoice_products?
}

model categories {
  id         BigInt   @id @default(autoincrement())
  name       String
  user_id    BigInt?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user     users?     @relation(fields: [user_id], references: [id])
  products products[]
}

model invoices {
  id          BigInt   @id @default(autoincrement())
  total       String
  discount    String
  vat         String
  payable     String
  user_id     BigInt?
  customer_id BigInt?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  customer         customers?         @relation(fields: [customer_id], references: [id])
  user             users?             @relation(fields: [user_id], references: [id])
  invoice_products invoice_products[]
}

model customers {
  id         BigInt   @id @default(autoincrement())
  name       String
  email      String   @unique
  mobile     String
  user_id    BigInt?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user     users?     @relation(fields: [user_id], references: [id])
  invoices invoices[]
}

model users {
  id         BigInt   @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String   @unique
  mobile     String
  password   String
  otp        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  products       products[]
  categories     categories[]
  invoices       invoices[]
  invoiceProduct invoice_products[]
  customers      customers[]
}
